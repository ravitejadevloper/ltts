parameters:
  displayName: 'Copy unreleased file to Blob Storage'
  sourceFile: ''
  azureSubscription: ''
  storageAccount: ''
  containerName: ''
  destinationPath: ''
  commitCompare: ''
  isReleased: 'true'

steps:
- task: AzureCLI@2
  displayName: '${{ parameters.displayName }}'
  continueOnError: true
  inputs:
    azureSubscription: '${{parameters.azureSubscription}}'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-host "isReleased is ${{ parameters.isReleased }}"
      $releasesRemoteFilePath = 'release/${{parameters.destinationPath}}'
      $dropRemoteFilePath = 'drop/${{parameters.destinationPath}}'
      $storageAccount = '${{parameters.storageAccount}}'
      $containerName = '${{parameters.containerName}}'
      $sourceFile = '${{parameters.sourceFile}}'
      $commitCompare = '${{parameters.commitCompare}}'
      $exists = az storage blob exists --name $releasesRemoteFilePath --account-name $storageAccount --container-name $containerName --auth-mode login
      Write-host "file ${releasesRemoteFilePath} exists response:${exists}"
      $currentCommitId = (git rev-parse --short HEAD)
      Write-Host "currentCommit:$currentCommitId commitCompare:$commitCompare"
      $remoteCommitId = ''
      if ($exists -like "*true*" -And '$commitCompare' -ne '') {
        try {
          $remoteCommitId = ((az storage blob metadata show --name $releasesRemoteFilePath --account-name $storageAccount --container-name $containerName --auth-mode login | ConvertFrom-Json).commitId)
        }
        catch {
          Write-host "file ${releasesRemoteFilePath} has no commitId"
          $remoteCommitId = ''
        }

        if ($remoteCommitId -ne '' -And $remoteCommitId -ne $currentCommitId) {
          $isError = 'false'
          $files = ''

          try {
                $files=(git diff --name-only $remoteCommitId HEAD)
              }
          catch {
              Write-Host ("Failed to find differences for " + $($remoteCommitId)) -ForegroundColor Red
              $isError = 'true'
              $files = ''
          }
          
          if ($isError -eq 'true') {
            Write-host "##vso[task.setvariable variable=IsError]true"
            throw;
          }

          if ($files -eq '' -Or $files -eq $null) {
            Write-host "$files evaluated to null or empty.  Setting $filenames to empty array."
            $filenames = @()
          }
          else
          {
            $filenames=$files.Split(' ') 
          }
          
          $count=$filenames.Length
          echo "Total changed $count files"
          
          For ($i=0; $i -lt $filenames.Length; $i++) 
          { 
            $currentItem = $filenames[$i]   
            if ($currentItem -like "$commitCompare")
            {
              Write-host "##vso[task.setvariable variable=IsError]true"
              Write-Host "there was a change to $currentItem - so build is invalid"
              throw
            }
          }
        }

        if ($isError -ne 'true') {
          Write-host "delvery is released to ${releasesRemoteFilePath} was the same and it is okay to NOT copy to drop"
        }
      }
      else {
        Write-host "delivery is not released to:${releasesRemoteFilePath}, dropping file $sourceFile"
        az storage blob upload -f $sourceFile --account-name $storageAccount --container-name $containerName --name $dropRemoteFilePath --overwrite true --auth-mode login
        az storage blob metadata update --name $dropRemoteFilePath --metadata commitId=$currentCommitId --account-name $storageAccount --container-name $containerName --auth-mode login
      }
