parameters:
  workingDirectory: "WinnConnect"
  deviceType: 'common'
  smartRvVersion: 'undefined'
  modules: []

steps:
- task: PowerShell@2
  displayName: create meta
  inputs:
    targetType: 'inline'
    script: |
      $deviceType = "${{parameters.deviceType}}"
      $modules = '${{ convertToJson(parameters.modules) }}' | ConvertFrom-Json -Depth 10

      $json = '{
        "deviceType" : "${{ parameters.deviceType }}",
        "version" : "$(Build.BuildNumber)",
        "versionRequired" : { "minimum": "0.0.0", "maximum":"$(Build.BuildNumber)" },
        "name" : "ota_meta.json",
        "type" : "meta",
        "files": ['
        for ( $index = 0; $index -lt $modules.count; $index++ )
        {
          if ($index -gt 0) {
            $json = $json + ','
          }
          $json = $json + '{ "name" : "' + $modules[$index].module + '-' + $modules[$index].version + '.tar.gz.gpg", "description" : "' + $modules[$index].module + '", "module" : "' + $modules[$index].module + '", "version" : "' + $modules[$index].version + '", "type":"file_bundle", "container":"' + $modules[$index].container + '"}'
        }
        
        ## append ota_template

        $json = $json + ',{
            "name": "ota_template.json",
            "type": "template",
            "description": "ota template",
            "version": "$(Build.BuildNumber)",
            "container": "deviceType"
          },{
            "name": "${{ parameters.deviceType }}.{{seriesModel}}.{{floorPlan}}.ota_template.json",
            "type": "template",
            "description": "ota template",
            "version": "$(Build.BuildNumber)",
            "container": "deviceType",
            "fallback": "ota_template.json"
          }'
        
        $json = $json + ']}'
        

      $json | Out-File ota_meta.json
    workingDirectory: '${{ parameters.workingDirectory }}'
    pwsh: true # For Linux
