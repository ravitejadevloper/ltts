import time
from datetime import datetime
from enum import Enum, IntEnum, auto
from typing import List, Optional, Union

import pytz
from pydantic import BaseModel, Field

CODE_TO_ATTR = {
    # Movables
    'lj': 'leveling_jack',
    'so': 'slideout',
    'aw': 'awning',

    # Watersystems
    'wt': 'water_tank',
    'wh': 'water_heater',
    'wp': 'water_pump',
    'tc': 'toilet_circuit',

    # Climate
    'he': 'heater',
    'rf': 'refrigerator',
    'rv': 'roof_vent',
    'th': 'thermostat',
    'ac': 'air_conditioner',

    # Energy
    'es': 'energy_source',
    'ei': 'inverter',
    'bm': 'battery_management',
    'ft': 'fuel_tank',
    'ec': 'energy_consumer',
    'ge': 'generator',
    'ba': 'battery',
    'ls': 'load_shedding',
    'ic': 'charger',

    # Lighting
    'lz': 'lighting_zone',
    'lg': 'lighting_group',

    # Vehicle
    'ch': 'vehicle',
    'dl': 'door_lock',

    # System
    'lk': 'lockouts',
    'us': 'setting',        # User setting

    # Features
    'pm': 'pet_monitoring',
    'wx': 'weather',
    'dx': 'diagnostics',

    # Connectivity
    'ce': 'network',    # Cellular, thus ce
}

ATTR_TO_CODE = {v: k for k, v in CODE_TO_ATTR.items()}

FLOORPLAN_TO_INFO = {
    'WM524T': {
        'name': 'VIEW',
        'floorplan': '24T'
    },
    'IM524T': {
        'name': 'NAVION',
        'floorplan': '24T'
    },
    'WM524R': {
        'name': 'VIEW',
        'floorplan': '24R'
    },
    'IM524R': {
        'name': 'NAVION',
        'floorplan': '24R'
    },
    'WM524D': {
        'name': 'VIEW',
        'floorplan': '24D'
    },
    'IM524D': {
        'name': 'NAVION',
        'floorplan': '24D'
    },
    'WM524NP': {
        'name': 'VIEW',
        'floorplan': '24NP'
    },
    'IM524NP': {
        'name': 'NAVION',
        'floorplan': '24NP'
    },
    'W44R': {
        'name': '???',
        'floorplan': '???'
    },
    'BF848EC': {
        'name': 'ERV2',
        'floorplan': ''
    },
    'VANILLA': {        # Manufacturing floorplan
        'name': '',
        'floorplan': ''
    },
    'DEMO_ALL': {       # Floorplan that should load all features
        'name': 'WinnConnect Demo',
        'floorplan': 'DEMO'
    },
}


class KeyValue(BaseModel):
    key: str
    value: Union[str, int, float, bool]


class ValueMap(BaseModel):
    values: List[KeyValue]


class RVEvents(IntEnum):
    '''
    Naming conventions for enums
    *_CHANGE -> Used when an actual data point value changed, either from CAN, Serial, APP, UI Settings
    *_ALERT -> Generated by algorithms based on CHANGE events or other logic decisions
    *_ERROR -> ... TODO: Add definition
    *_LOCK -> Indicated that a system might be locked from being changed, either load shedding, safety etc.
    *_EVENT / Implicit ?

    https://winnebagoind.sharepoint.com/:x:/r/sites/CustomerDigitalStrategy/_layouts/15/doc2.aspx?sourcedoc=%7B002181D0-765C-4451-95AD-CC0615C68E02%7D&file=SmartRV_Data.xlsx&action=default&mobileredirect=true&cid=d27137c2-a2d1-4221-8ca0-7d3eb7e5db06&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiIyOC8yMzAxMDUwNTYwMCIsIkhhc0ZlZGVyYXRlZFVzZXIiOmZhbHNlfQ%3D%3D
    '''
    SERVICE_START = 500
    SERVICE_RESTART = 501
    SERVICE_KILL = 502
    SERVICE_STOP = 503
    FLOORPLAN_LOADED = 600
    FLOORPLAN_ERROR = 601

    # TODO ADD in the alert and notifications events to the SmartRV_Data sheet
    # TODO for reporting to the platform and device twin

    # FIRST EDITION EVENTS Ccommented out are replaced by the SmartRV_Data sheet names further down the file

    # CLIMATE_AC_FAN_SPEED_CHANGE = 1000
    # CLIMATE_AC_COMPRESSOR_ONOFF_CHANGE = auto()
    # CLIMATE_AC_HEATER_ONOFF_CHANGE = auto()
    # CLIMATE_ZONE_TEMPERATURE_CHANGE = auto()
    # CLIMATE_ZONE_SET_TEMP_COOL_CHANGE = auto()
    # CLIMATE_ZONE_SET_TEMP_HEAT_CHANGE = auto()
    # CLIMATE_ZONE_MODE_CHANGE = auto()

    # CLIMATE_ZONE_FAN_ONOFF_CHANGE = auto()
    # CLIMATE_ZONE_FAN_SPEED_CHANGE = auto()
    # CLIMATE_ZONE_FAN_DOME_CHANGE = auto()
    # CLIMATE_ZONE_FAN_DIRECTION_CHANGE = auto()

    # SETTING_TEMP_UNIT_CHANGE = auto()
    # SETTING_FLUID_UNIT_CHANGE = auto()

    # ENERGY_SHORE_DETECTED = auto()
    # ENERGY_CHARGE_LVL_CHANGE = auto()
    # TODO verify replacement enum has correct lable ENERGY_AC_CURRENT_CHANGE = auto()
    # ENERGY_DC_CURRENT_CHANGE = auto()

    # VEHICLE_STATE_OF_CHARGE = 2000
    # VEHICLE_PARK_BRAKE_STATUS = auto()

    # LIGHTING_ZONE_ONOFF = 3000
    # LIGHTING_ZONE_BRIGHTNESS_CHANGE = auto()
    # LIGHTING_ZONE_RGB_CHANGE = auto()
    # LIGHTING_ZONE_COLORTEMP_CHANGE = auto()
    # LIGHTING_ZONE_SMARTTOGGLE_ONOFF = auto()
    # LIGHTING_ZONE_MASTER_ONOFF = auto()

    # LIGHTING_PRESET_ACTIVATED = auto()
    # LIGHTING_PRESET_SET = auto()

    SYSTEM_ACTIVITY_STATE_CHANGE = 4000
    LOCKOUT_STATE_CHANGE = 4001

    # WATERSYSTEMS_LEVEL_CHANGE = 5000
    # WATERSYSTEMS_PUMP_ONOFF = auto()
    # WATERSYSTEMS_HEATER_ONOFF = auto()
    # WATERSYSTEMS_LOW_FRESH_WATER = auto()
    # WATERSYSTEMS_FRESH_WATER_LEVEL_CHANGE = auto()
    # WATERSYSTEMS_GREY_WATER_LEVEL_CHANGE = auto()
    # WATERSYSTEMS_BLACK_WATER_LEVEL_CHANGE = auto()

    # The following Events are Generated for the Platform and The Values should not change.
    # WATER HEATER
    WATER_HEATER_OPERATING_MODE_CHANGE = 5000
    WATER_HEATER_WATER_TEMPERATURE_CHANGE = 5001
    WATER_HEATER_WATER_SET_TEMPERATURE_CHANGE = 5002
    WATER_HEATER_ONOFF_CHANGE = 5003
    WATER_HEATER_ERROR_CODES = 5199

    # WATER PUMP
    WATER_PUMP_OPERATING_MODE_CHANGE = 5200
    WATER_PUMP_ERROR_CODES = 5399

    # AWNING 5400 - 5599
    AWNING_MODE_CHANGE = 5400
    AWNING_PERCENT_EXTENDED_CHANGE = 5401
    AWNING_MOTION_SENSE_SENSITIVITY_CHANGE = 5402
    AWNING_MOTION_SENSE_TRIGGERED = 5403
    AWNING_LIGHT_MODE_CHANGE = 5404
    AWNING_LIGHT_BRIGHTNESS_LEVEL_CHANGE = 5405
    AWNING_MOTION_SENSE_MODE_CHANGE = 5406

    AWNING_LIGHT_ERROR_CODES = 5598
    AWNING_ERROR_CODES = 5599

    # SLIDEOUT 5600 - 5799
    SLIDEOUT_MODE_CHANGE = 5600

    # LEVEL JACKS 5800 - 5999
    LEVELING_JACKS_MODE_CHANGE = 5800

    # CHARGER
    INVERTER_CHARGER_INVERTER_MODE_CHANGE = 6000
    INVERTER_CHARGER_CURRENT_METER_AFTER_INVERTER_CHANGE = 6001
    INVERTER_CHARGER_INVERTER_STATUS_CHANGE = 6002
    INVERTER_CHARGER_INVERTER_VOLTAGE_CHANGE = 6003
    INVERTER_CHARGER_INVERTER_CURRENT_CHANGE = 6004
    INVERTER_CHARGER_INVERTER_FREQUENCY_CHANGE = 6005
    INVERTER_CHARGER_CHARGER_STATUS_CHANGE = 6006
    INVERTER_CHARGER_CHARGER_VOLTAGE_CHANGE = 6007
    INVERTER_CHARGER_CHARGER_CURRENT_CHANGE = 6008
    INVERTER_CHARGER_CHARGER_FREQUENCY_CHANGE = 6009
    INVERTER_CHARGER_CHARGER_CAPACITY_CHANGE = 6010
    INVERTER_CHARGER_CHARGER_ERROR_CODES = 6199

    # Renumbered after separation
    CHARGER_STATUS_CHANGE = 6000
    CHARGER_VOLTAGE_CHANGE = 6001
    CHARGER_CURRENT_CHANGE = 6002
    CHARGER_FREQUENCY_CHANGE = 6003             # AC frequency e.g. 60 to 50 Hz
    CHARGER_CAPACITY_CHANGE = 6004              # What is this ?
    CHARGER_SET_CHARGE_LVL_CHANGE = 6005        # Can be used to indicate a change in the desired charge level, need more events for user settable items
    CHARGER_CURRENT_CHARGE_LVL_CHANGE = 6006    # Can be used to indicate a change in the desired charge level, need more events for user settable items
    CHARGER_POWER_CHANGE = 6007
    CHARGER_ACTIVE_CHANGE = 6008                # Defines if shore power is actively providing power to the system
    CHARGER_ERROR_CODES = 6199

    # LIGHTING ZONES 6200 - 6399
    LIGHTING_ZONE_NAME_CHANGE = 6200                # Does not usually happen, but could be enabled int he future for customer to change to their liking
    LIGHTING_ZONE_MODE_CHANGE = 6201                # On OFF
    LIGHTING_ZONE_RGBW_COLOR_CHANGE = 6202          # RGB
    LIGHTING_ZONE_BRIGHTNESS_LEVEL_CHANGE = 6203
    LIGHTING_ZONE_COLOR_TEMP_CHANGE = 6204          # Kelvin
    LIGHTING_ZONE_ERROR_CODES = 6399                # Catchall error

    # LIGHTING GROUP 6400 - 6599
    LIGHTING_GROUP_LIGHT_SWITCH_NAME_CHANGE = 6400
    LIGHTING_GROUP_LIGHT_SWITCH_OPERATING_MODE_CHANGE = 6401
    LIGHTING_GROUP_LIGHT_SWITCH_LIGHT_MAPPINGS_CHANGE = 6402
    LIGHTING_GROUP_BRIGHTNESS_LEVEL_CHANGE = 6403   # Used in smart toggle / master all
    LIGHTING_GROUP_ERROR_CODES = 6599

    # GENERATOR 6600 - 6799
    GENERATOR_MODE_CHANGE = 6601
    GENERATOR_OPERATING_MODE_CHANGE = 6602

    # THERMOSTAT 6800 - 6999
    THERMOSTAT_OPERATING_MODE_CHANGE = 6800
    THERMOSTAT_SCHEDULE_DAY_CHANGE = 6801
    THERMOSTAT_INDOOR_TEMPERATURE_CHANGE = 6802
    THERMOSTAT_CURRENT_HEAT_TEMPERATURE_SET_CHANGE = 6803
    THERMOSTAT_CURRENT_COOL_TEMPERATURE_SET_CHANGE = 6804
    THERMOSTAT_COMPRESSOR_MIN_OFF_TIME_CHANGE = 6805
    THERMOSTAT_COMPRESSOR_MIN_ON_TIME_CHANGE = 6806
    THERMOSTAT_COOL_DIFFERENTIAL_TEMPERATURE_CHANGE = 6807
    THERMOSTAT_COOL_TEMPERATURE_RANGE_CHANGE = 6808
    THERMOSTAT_HEAT_DIFFERENTIAL_TEMPERATURE_CHANGE = 6809
    THERMOSTAT_HEAT_TEMPERATURE_RANGE_CHANGE = 6810
    THERMOSTAT_HEAT_COOL_MIN_DELTA_CHANGE = 6811
    THERMOSTAT_HEATER_MIN_OFF_TIME_CHANGE = 6812
    THERMOSTAT_HEATER_MIN_ON_TIME_CHANGE = 6813
    THERMOSTAT_HIGH_LOW_TEMPERATURE_WARNING_CHANGE = 6814
    THERMOSTAT_OUTDOOR_TEMPERATURE_CHANGE = 6815           # Added to account for temp change on the outside regardless of where the data is coming from
    THERMOSTAT_CURRENT_OPERATING_MODE_CHANGE = 6816
    THERMOSTAT_GENERAL_ONOFF_CHANGE = 6817
    THERMOSTAT_ERROR_CODES = 6999

    # AIR CONDITIONER 7000 - 7199
    AIR_CONDITIONER_COMPRESSOR_MODE_CHANGE = 7000
    AIR_CONDITIONER_FAN_SPEED_CHANGE = 7001
    AIR_CONDITIONER_FAN_MODE_CHANGE = 7002

    # FURNACE / HEATER
    FURNACE_OPERATING_MODE_CHANGE_CHANGE = 7200
    FURNACE_FAN_SPEED_CHANGE = 7201
    FURNACE_HEAT_OUTPUT_LEVEL_CHANGE = 7202
    HEATER_ENERGY_SOURCE_CHANGE = 7203
    HEATER_MODE_CHANGE = 7204
    FURNACE_ERROR_CODES = 7399

    # Duplicated to reflect the shared events between a furnace and a heater
    HEATER_OPERATING_MODE_CHANGE = 7200
    HEATER_FAN_SPEED_CHANGE = 7201
    HEATER_HEAT_OUTPUT_LEVEL_CHANGE = 7202
    HEATER_ERROR_CODES = 7399

    # DEPRECATED 7400 - 7599
    ELECTRIC_HEATER_OPERATING_MODE_CHANGE = 7400
    ELECTRIC_HEATER_ERROR_CODES = 7599

    # SOLAR CHARGING 7600 - 7799
    SOLAR_CHARGER_SHUNT_DC_CURRENT_CHANGE = 7600
    SOLAR_CHARGER_SHUNT_DC_VOLTAGE_CHANGE = 7601
    SOLAR_CHARGER_SHUNT_DC_POWER_CHANGE = 7602
    SOLAR_CHARGER_SHUNT_ACTIVE_CHANGE = 7603
    SOLAR_CHARGER_ERROR_CODES = 7799

    # BATTERY MANAGEMENT / LITHIUM BATTERY
    LITHIUM_ION_BATTERY_TEMPERATURE_CHANGE = 7800
    LITHIUM_ION_BATTERY_VOLTAGE_STATUS_CHANGE = 7801
    LITHIUM_ION_BATTERY_DC_CURRENT_CHANGE = 7802
    LITHIUM_ION_BATTERY_DC_POWER_CHANGE = 7803
    LITHIUM_ION_BATTERY_STATE_OF_HEALTH_CHANGE = 7804
    LITHIUM_ION_BATTERY_REMAINING_DISCHARGE_CAPACITY_CHANGE = 7805
    LITHIUM_ION_BATTERY_TIME_REMAINING_TO_EMPTY_CHANGE = 7806
    LITHIUM_ION_BATTERY_TIME_REMAINING_TO_FULL_CHARGE_CHANGE = 7807
    LITHIUM_ION_BATTERY_TIME_REMAINING_INTERPRETATION_CHANGE = 7808
    LITHIUM_ION_BATTERY_STATE_OF_CHARGE_CHANGE = 7809
    LITHIUM_ION_BATTERY_ERROR_CODES = 7999

    # NEW BATTERY MANAGEMENT - DELETE ABOVE
    BMS_TEMPERATURE_CHANGE = 7800
    BMS_VOLTAGE_STATUS_CHANGE = 7801
    BMS_DC_CURRENT_CHANGE = 7802
    BMS_DC_POWER_CHANGE = 7803
    BMS_STATE_OF_HEALTH_CHANGE = 7804
    BMS_REMAINING_DISCHARGE_CAPACITY_CHANGE = 7805
    BMS_TIME_REMAINING_TO_EMPTY_CHANGE = 7806
    BMS_TIME_REMAINING_TO_FULL_CHARGE_CHANGE = 7807
    BMS_TIME_REMAINING_INTERPRETATION_CHANGE = 7808     # Would this be better in a event IS_CHARGING_CHANGE ?
    BMS_STATE_OF_CHARGE_CHANGE = 7809
    BMS_ERROR_CODES = 7999

    # ALTERNATOR 8000 - 8199
    ALTERNATOR_CHARGER_STATE_CHANGE = 8000
    ALTERNATOR_VOLTAGE_CHANGE = 8001
    ALTERNATOR_CURRENT_CHANGE = 8002
    ALTERNATOR_TEMPERATURE_CHANGE = 8003
    ALTERNATOR_ERROR_CODES = 8199

    # ROOF VENT FAN 8200 - 8399
    ROOF_VENT_OPERATING_MODE_CHANGE = 8200
    ROOF_VENT_DOME_POSITION_CHANGE = 8201
    ROOF_VENT_FAN_DIRECTION_CHANGE = 8202
    ROOF_VENT_FAN_SPEED_CHANGE = 8203
    ROOF_VENT_RAIN_SENSOR_CHANGE = 8204
    ROOF_VENT_ERROR_CODES = 8399

    # CHASSIS / VEHICLE 8400 - 8599
    CHASSIS_CHARGING_STATE_CHANGE = 8400
    CHASSIS_SOC_CHANGE = 8401
    CHASSIS_REMAINING_TIME_TO_FULL_CHANGE = 8402
    CHASSIS_VOLTAGE_CHANGE = 8403
    CHASSIS_RPM_CHANGE = 8404
    CHASSIS_SPEED_CHANGE = 8405
    CHASSIS_COOLANT_TEMPERATURE_CHANGE = 8406
    CHASSIS_MALFUNCTION_INDICATOR_STATUS_CHANGE = 8407
    CHASSIS_VIN_CHANGE = 8408
    CHASSIS_NUMBER_OF_IGNITION_CYCLES_CHANGE = 8409
    CHASSIS_ODOMETER_READING_CHANGE = 8410
    CHASSIS_DTCS_CHANGE = 8411
    CHASSIS_IGNITION_STATUS_CHANGE = 8412
    CHASSIS_PRNDL_STATUS_CHANGE = 8413
    CHASSIS_FUEL_STATUS_CHANGE = 8414
    CHASSIS_PARK_BRAKE_CHANGE = 8415
    CHASSIS_OUTSIDE_TEMPERATURE_CHANGE = 8416
    CHASSIS_AVAILABLE_MILAGE_RANGE_CHANGE = 8417
    CHASSIS_CHARGINIG_STATUS_CHANGE = 8418
    CHASSIS_12V_VOLTAGE_CHANGE = 8419
    CHASSIS_12V_SOC_CHANGE = 8420
    CHASSIS_PRO_POWER_STATUS_CHANGE = 8421
    CHASSIS_TIRE_LOCATION_CHANGE = 8422         # Unlikely to change
    CHASSIS_TIRE_PRESSURE_CHANGE = 8423         # This will use a definition of which wheel is affected
    CHASSIS_CHARGING_STAGE_CHANGE = 8424
    CHASSIS_CHARGING_TYPE_CHANGE = 8425

    CHASSIS_DOOR_LOCK_CHANGE = 8426             # TODO: Does this belong somewhere else ?
    CHASSIS_TRANSMISSION_NOT_IN_PARK_CHANGE = 8427
    CHASSIS_ENGINE_RUNNING_CHANGE = 8428
    CHASSIS_PARK_BRAKE_IGNITION_COMBO_CHANGE = 8429

    CHASSIS_CHASSIS_ERROR_CODES = 8599          # DEPRECATE THIS ONE
    CHASSIS_ERROR_CODES = 8599

    # WATER TANK 8600 - 8799
    WATER_TANK_FLUID_LEVEL_CHANGE = 8600
    WATER_TANK_TANK_CAPACITY_CHANGE = 8601      # This likely wont change often
    WATER_TANK_FLUID_TYPE_CHANGE = 8602         # This likely wont change often / at all
    WATER_TANK_SENSOR_UNDERVOLTAGE = 8603       # When we receive too little volts (usually < 0.5V)
    WATER_TANK_SENSOR_OVERVOLTAGE = 8604        # When we receive too many volts (usually >5.0V)
    # Errors to expect to indicate the sensor is clogged ?
    WATER_TANK_ERROR_CODES = 8799

    # WINNCONNECT SYSTEM 8800 - 8999
    WINNCONNECT_SYSTEM_SET_SCREEN_BRIGHTNESS_CHANGE = 8800
    WINNCONNECT_SYSTEM_CURRENT_SCREEN_BRIGHTNESS_CHANGE = 8801
    WINNCONNECT_SYSTEM_RV_SOFTWARE_VERSION_CHANGE = 8802
    WINNCONNECT_SYSTEM_RV_ACTIVE_SOFTWARE_INSTALL_DATE_CHANGE = 8803
    WINNCONNECT_SYSTEM_RV_PREVIOUS_SOFTWARE_VERSION_CHANGE = 8804
    WINNCONNECT_SYSTEM_RV_PREVIOUS_SOFTWARE_INSTALL_DATE_CHANGE = 8805
    WINNCONNECT_SYSTEM_DARK_MODE_CHANGE = 8806
    WINNCONNECT_SYSTEM_USER_RESTART_TRIGGERED_CHANGE = 8807
    WINNCONNECT_SYSTEM_MASTER_RESET_TRIGGERED_CHANGE = 8808
    WINNCONNECT_SYSTEM_USER_SET_TEMPERATURE_UNIT_CHANGE = 8809
    WINNCONNECT_SYSTEM_USER_SET_VOLUME_UNIT_CHANGE = 8810
    WINNCONNECT_SYSTEM_USER_SET_DISTANCE_UNIT_CHANGE = 8811
    WINNCONNECT_SYSTEM_USER_BACKUP_CHANGE = 8812
    WINNCONNECT_SYSTEM_CAN_BUS_TIMEOUT = 8813
    WINNCONNECT_SYSTEM_CAN_BUS_RVC_RED_LAMP_CHANGE = 8814       # Triggered if a DM_RV msg holds a red lamp status
    WINNCONNECT_SYSTEM_CAN_BUS_RVC_YELLOW_LAMP_CHANGE = 8815    # Triggered if a DM_RV msg holds a yellow lamp status
    WINNCONNECT_SYSTEM_SETTINGS_SERVICE_MODE_CHANGE = 8816      # Triggered entering or exiting service mode
    WINNCONNECT_SYSTEM_MODE_CHANGE = 8817                       # Triggered changing dealer mode / usser mode etc.
    WINNCONNECT_ERROR_CODES = 8999      # Generic catch all

    # WINNCONNECT HMI HARDWARE CHANGE
    WINNCONNECT_HMI_HARDWARE_MICROCONTROLLER_MANUFACTURER_CHANGE = 9000     # Does not change unless replaced with a new system
    WINNCONNECT_HMI_HARDWARE_MICROCONTROLLER_MODEL_NAME_CHANGE = 9001       # Does not change unless replaced with a new system
    WINNCONNECT_HMI_HARDWARE_MICROCONTROLLER_MODEL_REVISION_CHANGE = 9002   # Does not change unless replaced with a new system
    WINNCONNECT_HMI_HARDWARE_OS_NAME_CHANGE = 9003
    WINNCONNECT_HMI_HARDWARE_OS_REVISION_CHANGE = 9004
    WINNCONNECT_HMI_HARDWARE_CURRENT_RAM_USAGE_CHANGE = 9005
    WINNCONNECT_HMI_HARDWARE_AVAILABLE_RAM_CHANGE = 9006
    WINNCONNECT_HMI_HARDWARE_CPU_USAGE_CHANGE = 9007
    WINNCONNECT_HMI_HARDWARE_USED_STORAGE_CHANGE = 9008
    WINNCONNECT_HMI_HARDWARE_AVAILABLE_STORAGE_CHANGE = 9009
    WINNCONNECT_HMI_HARDWARE_UTC_CHANGE = 9010                      # What is that meant to say ? Update of the time ? Update of date ? Timezone ?

    # OTA 9200 - 9399
    OTA_OPERATING_MODE_CHANGE = 9200
    OTA_UPDATE_RECEIVED = 9201

    # REFRIGERATOR 9400 - 9599
    REFRIGERATOR_TEMPERATURE_CHANGE = 9400
    REFRIGERATOR_MODE_CHANGE = 9401
    REFRIGERATOR_BREAKER_TRIPPED = 9598
    REFRIGERATOR_ERROR_CODES = 9599

    # WIFI 9600 - 9799
    WIFI_OPERATING_MODE_CHANGE = 9600
    WIFI_MODE_CHANGE = 9601
    WIFI_ACCESS_POINT_HIDDEN_CHANGE = 9602
    WIFI_SECURITY_CHANGE = 9603
    WIFI_STRENGTH_CHANGE = 9604
    WIFI_CONNECTED_DEVICES_CHANGE = 9605
    WIFI_ERROR_CODES = 9799

    # BLUETOOTH 9800 - 9999
    BLUETOOTH_OPERATING_MODE_CHANGE = 9800
    BLUETOOTH_STRENGTH_CHANGE = 9801
    BLUETOOTH_CONNECTED_DEVICES_CHANGE = 9802
    BLUETOOTH_ERROR_CODES = 9999

    # CELLULAR 10000 - 10199
    CELLULAR_OPERATING_MODE_CHANGE = 10000
    CELLULAR_STRENGTH_CHANGE = 10001
    CELLULAR_OPERATOR_CHANGE = 10002
    CELLULAR_CELLUAR_STATUS_CHANGE = 10003
    CELLULAR_ENABLED_STATE_CHANGE = 10004       # Used for user enabled/disabled cellular
    CELLULAR_TCU_ID_CHANGE = 10005
    CELLULAR_IMEI_1_CHANGE = 10006
    CELLULAR_ICCID_1_CHANGE = 10007
    CELLULAR_IMEI_2_CHANGE = 10008
    CELLULAR_ICCID_2_CHANGE = 10009
    CELLULAR_ERROR_CODES = 10199

    # LOCATION 10200 - 10399
    LOCATION_OPERATING_MODE_CHANGE = 10200
    LOCATION_GEO_LOC_CHANGE = 10201
    LOCATION_ALTITUDE_CHANGE = 10202
    LOCATION_VISIBLE_SATS_CHANGE = 10203
    LOCATION_USER_OPTIN_CHANGE = 10204
    LOCATION_ERROR_CODES = 10399

    # WEATHER 10400 - 10599

    # ENERGY MANAGEMENT 10600 - 10799
    ENERGY_MANAGEMENT_AC_CURRENT_METER_CHANGE = 10600
    ENERGY_MANAGEMENT_LOAD_SHEDDING_TRIGGER_CHANGE = 10601
    ENERGY_MANAGEMENT_ZONE_4_LOCAL_FLAG_CHANGE = 10602
    ENERGY_MANAGEMENT_ZONE_5_LOCAL_FLAG_CHANGE = 10603
    ENERGY_MANAGEMENT_SYSTEM_OVERLOAD_TRIGGER_CHANGE = 10604
    ENERGY_MANAGEMENT_AVC2_MODE_CHANGE = 10605
    ENERGY_MANAGEMENT_GENERATOR_STATE_CHANGE = 10606
    ENERGY_MANAGEMENT_ERROR_CODES = 10799

    # PRO POWER / VEHICLE POWER ?   10800 - 10999
    PROPOWER_PRO_POWER_RELAY_CHANGE = 10800
    PROPOWER_VOLTAGE_CHANGE = 10801     # Not changing at this time as it is hard coded
    PROPOWER_CURRENT_CHANGE = 10802     # Comes from AC sensor and is conditional to AVC2 switching
    PROPOWER_POWER_CHANGE = 10803       # Must fire at the same time as current changes
    PROPOWER_ACTIVE_CHANGE = 10804      # Defines if power is actively provided by Pro Power
    PROPOWER_ERROR_CODES = 10999

    # INVERTER 11000 - 11199
    INVERTER_MODE_CHANGE = 11000             # Invert On or off
    INVERTER_OUTPUT_CURRENT_CHANGE = 11001   # This comes from Cerbo GX, current sensor or from CAN enabled inverter like XANTRAX
    INVERTER_STATUS_CHANGE = 11002           # What is status ?
    INVERTER_OUTPUT_VOLTAGE_CHANGE = 11003
    INVERTER_CURRENT_CHANGE = 11004          # Duplicate with 11001
    INVERTER_FREQUENCY_CHANGE = 11005        # Does this really happen ? Probably cause for concern
    INVERTER_OVERLOAD_CHANGE = 11006         # True if inverter is in overload, false if not
    INVERTER_LOAD_CHANGE = 11007            # WATTS output as measured by whatever interface
    INVERTER_ERROR_CODES = 11199

    # BATTERY 11200 - 11399
    BATTERY_TEMP_CHANGE = 11200
    BATTERY_MODULE_COMMUNICATION_ERROR = 11398        # Could be fired if a module goes missing from CAN bus
    BATTERY_ERROR_CODES = 11399

    # ENERGY CONSUMERS 11400 - 11599
    ENERGY_CONSUMER_WATTS_CHANGE = 11400
    ENERGY_CONSUMER_CURRENT_CHANGE = 11401
    ENERGY_CONSUMER_VOLTAGE_CHANGE = 11402
    ENERGY_CONSUMER_ACTIVE_CHANGE = 11403
    ENERGY_CONSUMER_SHED_CHANGE = 11404
    ENERGY_CONSUMER_ERROR_CODES = 11599


    # MOVABLES 11600 - 11799
    # AWNING_POSITION_CHANGE = 11600
    # LEVELING_JACKS_POSITION_CHANGE = 11601
    # LEVELING_JACKS_MODE_CHANGE = 11602

    # SLIDEOUT_POSITION_CHANGE = 11701
    # SLIDEOUT_MODE_CHANGE = 11702
    # SLIDEOUT_TWO_STEP_ACK = 11703
    # SLIDEOUT_FULLY_RETRACTED = 11704
    # SLIDEOUT_FULLY_EXTENDED = 11705

    # ENERGY SOURCES 11800 - 11999
    ENERGY_SOURCE_MODE_CHANGE = 11800
    ENERGY_SOURCE_ACTIVE_CHANGE = 11801
    ENERGY_SOURCE_POWER_CHANGE = 11802
    ENERGY_SOURCE_VOLTAGE_CHANGE = 11803
    ENERGY_SOURCE_CURRENT_CHANGE = 11804

    # FUEL TANKS 12000 - 12199
    FUEL_TANK_LEVEL_CHANGE = 12000
    FUEL_TANK_DISABLED_CHANGE = 12001   # Used to disable fuel tank

    # PET MONITORING 12200 - 12399
    PET_MONITOR_MODE_CHANGE = 12200
    PET_MONITOR_ENABLED_CHANGE = 12201
    PET_MONITOR_TEMP_HIGH_SETTING_CHANGE = 12202    # Temp that we track for the max temp (requires cooling)
    PET_MONITOR_TEMP_LOW_SETTING_CHANGE = 12203     # Temp that we track for the min temp (requires heating)
    PET_MONITOR_INTERIOR_TEMP_CHANGE = 12204        # Track separate as we need to fire a separate alert range (maybe) ?
    PET_MONITOR_BATTERY_LOW = 12205
    PET_MONITOR_SHORE_DISCONECTED = 12206
    PET_MONITOR_TEMP_HIGH = 12207
    PET_MONITOR_TEMP_LOW = 12208

    EVENT_NOT_DEFINED = 0xffff

    ################################################################################
    # ALERTS
    WATERSYSTEMS_UNKNOWN_SYSTEM_ALERT = 50000
    SYSTEM_MEMORY_LOW_ALERT = 50001
    SYSTEM_CPU_LOAD_HIGH_ALERT = 50002
    SYSTEM_STORAGE_LOW_ALERT = 50003
    PETMINDER_HEAT_ALERT = 50004
    PETMINDER_DISTRESS_ALERT = 50005
    REFRIGERATOR_OUT_OF_RANGE = 50006
    FRESH_WATER_TANK_EMPTY = 50007
    FRESH_WATER_TANK_BELOW = 50008
    FRESH_WATER_TANK_FULL = 50009
    GREY_WATER_TANK_EMPTY = 50010
    GREY_WATER_TANK_ABOVE = 50011
    GREY_WATER_TANK_FULL = 50012
    FRESH_WATER_PUMP_ONOFF = 50013
    GREY_WATER_PUMP_ONOFF = 50014
    BATTERY_CHARGE_FULL = 50015
    BATTERY_CHARGE_LOW = 50016
    BATTERY_CHARGE_LOW_CUTOFF = 50017
    LOAD_SHEDDING_WATER_HEATER_LOCK = 50018
    LOAD_SHEDDING_CLIMATE_ZONE_HEATER_LOCK = 50019
    COACH_TEMP_LOW = 50020
    COACH_TEMP_HIGH = 50021
    INVERTER_TURNED_OFF = 50022
    INVERTER_ERROR = 50023
    SHORE_POWER_CONNECTED = 50024
    SHORE_POWER_DISCONNECTED = 50025
    WATER_HEATER_SHUT_OFF = 50026
    SPACE_HEATER_SHUT_OFF = 50027
    INVERTER_OVERLOADED = 50028
    BMS_DISCONNECTIN_BATTERY = 50029
    BATTERY_CHARGING_STARTED = 50030
    BATTERY_CHARGING_STOPPED = 50031
    RECEIVING_SOLAR_POWER = 50032
    USER_NEEDS_TO_ACKNOWLEDGE_OTA_UPDATE = 50033

    # Additional Alert levels
    FRESH_WATER_TANK_NOTICE = 50034
    GREY_WATER_TANK_NOTICE = 50035
    FREEZER_OUT_OF_RANGE = 50036

    # Pet Monitoring
    PET_MONITOR_TEMP_HIGH_ALERT = 50037
    PET_MONITOR_TEMP_LOW_ALERT = 50038
    PET_MONITOR_BATTERY_LOW_ALERT = 50039

    # Black Tank Addition
    BLACK_WATER_TANK_EMPTY = 50040
    BLACK_WATER_TANK_ABOVE = 50041
    BLACK_WATER_TANK_FULL = 50042
    BLACK_WATER_TANK_NOTICE = 50043

    # LOAD SHEDDING
    LOAD_SHEDDING_GENERIC_ALERT = 50044
    LOAD_SHEDDING_CLIMATE_ZONE_AC_LOCK = 50045
    LOAD_SHEDDING_MICROWAVE_SHED = 50046
    LOAD_SHEDDING_COOKTOP_SHED = 50047

    # WATER SENSOR ALERTS
    FRESH_WATER_TANK_SENSOR_OVERVOLTAGE_ALERT = 50048
    GRAY_WATER_TANK_SENSOR_OVERVOLTAGE_ALERT = 50049
    BLACK_WATER_TANK_SENSOR_OVERVOLTAGE_ALERT = 50050
    FRESH_WATER_TANK_SENSOR_UNDERVOLTAGE_ALERT = 50051
    GRAY_WATER_TANK_SENSOR_UNDERVOLTAGE_ALERT = 50052
    BLACK_WATER_TANK_SENSOR_UNDERVOLTAGE_ALERT = 50053

    # WATER HEATER ALERTS
    WATER_HEATER_OPERATING_LIN_FAILURE_ALERT = 50054
    WATER_HEATER_OPERATING_ERROR_FAILURE_ALERT = 50055

    # Service Mode
    SERVICE_MODE_ACTIVE = 50056


    # CAN Based Alerts 51000 - 55000
    GENERIC_CAN_ERROR_ALERT = 51000
    RVC_COMPONENT_NOT_RESPONDING = 51001

    WEATHER_ALERTS = 52000
    AIR_QUALITY_ALERT = 52001
    AVALANCHE_WARNING = 52002
    AVALANCHE_WATCH = 52003
    BLIZZARD_WARNING = 52004
    BLIZZARD_WATCH = 52005
    COASTAL_FLOOD_WARNING = 52006
    DENSE_FOG_ADVISORY = 52007
    EXCESSIVE_HEAT_WARNING = 52008
    EXTREME_COLD_WARNING = 52009
    EXTREME_FIRE_DANGER = 52010
    EXTREME_WIND_WARNING = 52011
    FIRE_WARNING = 52012
    FLASH_FLOOD_WARNING = 52013
    FLASH_FLOOD_WATCH = 52014
    FLOOD_WARNING = 52015
    FLOOD_WATCH = 52016
    FREEZE_WARNING = 52017
    FREEZING_RAIN_ADVISORY = 52018
    HIGH_WIND_WARNING = 52019
    HURRICANE_FORCE_WIND_WARNING = 52020
    HURRICANE_FORCE_WIND_WATCH = 52021
    HURRICANE_WARNING = 52022
    HURRICANE_WATCH = 52023
    SEVERE_THUNDERSTORM_WARNING = 52024
    SEVERE_THUNDERSTORM_WATCH = 52025
    STORM_WARNING = 52026
    STORM_WATCH = 52027
    TORNADO_WARNING = 52028
    TORNADO_WATCH = 52029
    TROPICAL_STORM_WARNING = 52030
    TROPICAL_STORM_WATCH = 52031
    WIND_ADVISORY = 52032
    WINTER_STORM_WARNING = 52033

    NOT_IMPLEMENTED = 65535     # Highest number that fits into a 16 bit integer


class EventValues(IntEnum):
    OFF = 0
    DISABLED = 0
    FALSE = 0
    AUTO_OFF = 0
    ON = 1
    ENABLED = 1
    TRUE = 1
    DATA_INVALID = 10
    NOT_AVAILABLE = 11
    NOT_APPLICABLE = 12
    RESERVED = 13
    PERCENT = 20
    CELSIUS = 21
    FAHRENHEIT = 22
    KELVIN = 23
    GALLONS = 24
    LITERS = 25
    AMPERE = 26
    VOLT = 27
    WATTS = 27
    AMP_HOURS = 28
    MINUTES = 30
    SECONDS = 31
    HOURS = 32
    DAYS = 33
    WEEKS = 34
    YEARS = 35
    DEGREES = 36
    AUTOMATIC = 50
    MANUAL = 51
    HIGH = 52
    LOW = 53
    LEVEL = 54
    FULL = 55
    EMPTY = 56
    INT = 57
    BOOL = 100
    STRING = 101
    FLOAT = 102
    MAP_DICT = 103
    ARRAY = 104
    COMBUSTION = 105
    MEDIUM = 106
    ELECTRIC = 500
    GAS_ELECTRIC = 501
    TEST_COMBUSTION = 502
    TEST_ELECTRIC = 503
    AC_PASSTHROUGH = 504
    APS_ONLY = 505
    LOAD_SENSE = 506
    WAITING_TO_INVERT = 507
    NOT_CHARGING = 508
    BULK = 509
    ABSORPTION = 510
    OVERCHARGE = 511
    EQUALIZE = 512
    CONSTANT_VOLTAGE_CURRENT = 513
    SHORE = 515
    PROPOWER = 516
    COOL = 517
    HEAT = 518
    AUTO = 519
    AUTO_HEAT_COOL = 519
    FAN_ONLY = 520
    AUX_HEAT = 521
    WINDOW_DEFROST_DEHUMIDIFY = 522
    TIME_TO_EMPTY = 523
    TIME_TO_FULL = 524
    OPENED = 525
    CLOSED = 526
    OPEN = 527
    # NOT_CHARGING = 528
    FAN_OUT = 529
    FAN_IN = 530
    NO_RAIN_DETECTED = 531
    RAIN_DETECTED = 532
    SENSOR_ERROR = 533
    RAIN_SENSOR_NOT_INSTALLED = 534
    NO_CONNECTION = 535
    CHARGING = 536
    RUN = 537
    START = 538
    PARK = 539
    NEUTRAL = 540
    REVERSE = 541
    DRIVE = 542
    PARK_BRAKE_RELEASED = 543
    PARK_BRAKE_APPLIED = 544
    FRONT_ON = 545
    FRONT_REAR_ON = 546
    FRONT_LEFT = 547
    FRONT_RIGHT = 548
    REAR_LEFT = 549
    REAR_RIGHT = 550
    LEVEL_1 = 551
    LEVEL_2 = 553
    LEVEL_3_DC = 554
    LOW_POWER_MODE = 555
    FAULT = 556
    STORAGE = 557
    PASS_THRU = 558
    INVERTING = 559
    ASSISTING = 560
    ECO = 561
    COMFORT = 562
    HALF = 563
    RETRACTED = 564
    EXTENDED = 565
    LEVELING = 566
    RETRACTING = 567
    STANDBY = 568
    EXTENDING = 569
    LOW_VOLTAGE = 570
    PROPANE = 571
    PSM_PB_IGN_COMBO = 579   # Ignition on and Park brake
    IGNITION_ON = 580

    # Levelling Jacks - RVC Biax movement introduced in 524T
    LEVELING_BIAX_FRONT_EXTENDING = 581
    LEVELING_BIAX_FRONT_RETRACTING = 582
    LEVELING_BIAX_BACK_EXTENDING = 583
    LEVELING_BIAX_BACK_RETRACTING = 584
    LEVELING_BIAX_LEFT_EXTENDING = 585
    LEVELING_BIAX_LEFT_RETRACTING = 586
    LEVELING_BIAX_RIGHT_EXTENDING = 587
    LEVELING_BIAX_RIGHT_RETRACTING = 588

    CRANK = 589
    PRIME = 590

    # Doorlock, used to differntiate between OPEN and CLOSED which is the possible
    # state of the door not the lock
    LOCK = 591
    LOCKED = 592
    UNLOCK = 593
    UNLOCKED = 594

    NOT_IN_PARK = 595
    LOAD_SHED_ACTIVE = 596
    HW_PANEL_BUSY = 597
    RESET = 598     # Used ion generator to differentiate between OFF and needing to set all circuits off
    FUEL_LOW = 599
    STARTING = 600  # Used as an intermediate state while we don't know better while reading generator status
    FUEL_EMPTY = 601    # Added for generator as a lockout
    ANTI_FREEZE = 602
    DECALCIFICATION = 603
    FAR_FIELD_LOCK = 604

    ENGINE_RUNNING = 605       # Added for Alternator check
    LOAD_SHEDDING_AIR_CONDITIONER_ACTIVE = 606
    LOAD_SHEDDING_COOKTOP_ACTIVE = 607
    LOAD_SHEDDING_MICROWAVE_ACTIVE = 608
    SERVICE_MODE_LOCKOUT = 609

    # System modes
    SYSTEM_MODE_USER = 610
    SYSTEM_MODE_MANUFACTURING = 611
    SYSTEM_MODE_DEALER = 612

    # Add for tank fill / drain
    TANK_STEADY = 613
    TANK_FILLING = 614
    TANK_DRAINING = 615

    # Error state 4000 - 4999
    GENERIC_ERROR = 4000     # Generic error value
    GENERATOR_OVERCRANKED = 4001
    GENERATOR_COOLDOWN = 4002
    TIME_BASED_LOCKOUT_15_SECS = 4003
    TIME_BASED_LOCKOUT_30_SECS = 4004
    TIME_BASED_LOCKOUT_10_MINUTES = 4005
    DECALC_WATERHEATER_LOCKOUT = 4006
    WATER_HEATER_BUSY_LOCKOUT = 4007  # User has used the pannel - we need to query the TM-630 to detect

    # Protected first 5000 values

    CIRCUIT_INVERTER = 5000

    CIRCUIT_WATERPUMP = auto()  # Currently 5001 - we should specify it not to not change it
    CIRCUIT_WATERHEATER = auto()

    LEVEL_TANK = auto()
    LEVEL_BATTERY = auto()

    ACTIVITY_IDLE = 6000
    ACTIVITY_SLEEP = auto()
    ACTIVITY_WAKE = auto()

    MAIN_SERVICE = 8001
    CAN_SERVICE = auto()
    IOT_SERVICE = auto()


class BtStateChange(IntEnum):
    PAIRING_UNKNOWN = 0
    PAIRING_STARTED = 1
    PAIRING_SUCCESS = 2
    PAIRING_FAILURE = 3


class LogEvent(BaseModel):
    def set_default_time():
        return time.time()

    timestamp: float = Field(
        set_default_time()
    )
    event: RVEvents
    instance: int
    value: Union[int, EventValues, str, float, bool, None] = Field(union_mode='smart')
    meta: Optional[dict]


class UIStyles(str, Enum):
    GOOD = '#72d473'
    BAD = '#e60000'


def convert_utc_to_local(utc_time, target_timezone):

    utc_timezone = pytz.timezone('UTC')
    target_timezone = pytz.timezone(target_timezone)

    if isinstance(utc_time, (int, float)):
        # If utc_time is a timestamp, convert it to a datetime object
        utc_time = datetime.utcfromtimestamp(utc_time)

    # Convert the UTC datetime object to the target timezone
    local_time = utc_timezone.localize(utc_time).astimezone(target_timezone)

    return local_time


def drop_internal_keys(input: dict) -> dict:
    result = {}
    # print(f' - -  drop_internal input {input}')
    if input is None:
        return result

    for key, value in input.items():
        if key[:1] != '_':
            if value is not None:
                result[key] = value

    return result


if __name__ == '__main__':
    import csv
    import json
    import sys

    x = EventValues.LOW
    print(x.name)
    # event_test = LogEvent(
    #     # timestamp=time.time(),
    #     event=RVEvents.AIR_CONDITIONER_COMPRESSOR_MODE_CHANGE,
    #     instance=1,
    #     value=EventValues.ON
    # )
    # print(event_test)

    sys.exit()

    # print(RVEvents)
    # print(dir(RVEvents))
    event_list = [{'name': x.name, 'value': x.value} for x in RVEvents]
    print(json.dumps(event_list, indent=4))
    json.dump(event_list, open('rv_events.json', 'w'), indent=4)

    csv_out = open('rv_events.csv', 'w')
    csv_handle = csv.DictWriter(csv_out, fieldnames=['name', 'value'])
    csv_handle.writeheader()

    csv_handle.writerows([{'name': x.name, 'value': x.value} for x in RVEvents])

    csv_out.close()

    # TODO: Tranform EventValues so it can be used by using a string
    print(EventValues['ON'])

    value_types = [{'name': x.name, 'value': x.value} for x in EventValues]
    print(value_types)

    csv_out = open('rv_values.csv', 'w')
    csv_handle = csv.DictWriter(csv_out, fieldnames=['name', 'value'])
    csv_handle.writeheader()

    csv_handle.writerows([{'name': x.name, 'value': x.value} for x in EventValues])

    csv_out.close()

    json.dump(value_types, open('rv_values.json', 'w'), indent=4)

    print(EventValues.OFF)
    print(str(EventValues.OFF))
    print(EventValues.OFF.value)
