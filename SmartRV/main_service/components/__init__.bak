
# TODO Read all component files and generate catalog


from dataclasses import dataclass

try:
    from .lighting import *
    from .movables import *
    from .climate import *
    from .energy import *
    from .watersystems import *
    from .vehicle import *
    from .system import *
    from .common import DEFAULT_ATTRIBUTES
except ImportError as err:
    print(err)
    from lighting import *
    from movables import *
    from climate import *
    from energy import *
    from watersystems import *
    from vehicle import *
    from system import *
    from common import DEFAULT_ATTRIBUTES


@dataclass
class CatalogItem:
    code: str
    component: object
    state: object


components = [
    # Lighting
    (LightSimple, LightSimpleState),
    (LightDimmable, LightDimmableState),
    (LightRGBW, LightRGBWState),

    # Movables
    (AwningRvc, AwningRvcState),
    (LevelJacksRvc, JackState),
    (SlideoutBasic, SlideoutBasicState),

    # Climate
    (RoofFanAdvanced, RoofFanAdvancedState),
    (Thermostat, ThermostatState),
    (HeaterBasic, HeaterState),
    (ThermostatOutdoor, ThermostatOutdoorState),
    (HeaterACHeatPump, HeaterSourceState),
    (RefrigeratorBasic, RefrigeratorState),
    (AcRvcGe, AcRvcGeState),

    # Energy
    (FuelTank, FuelTankState),
    (InverterAdvanced, InverterAdvancedState),
    (FuelTank, FuelTankState),
    (PowerSourceSolar, PowerSourceState),
    (PowerSourceShore, PowerSourceState),
    (PowerSourceAlternator, PowerSourceState),
    (PowerSourceGenerator, PowerSourceState),
    (BatteryManagement, BatteryMgmtState),
    (EnergyConsumer, EnergyConsumerState),
    (GeneratorPropane, GeneratorState),
    (BatteryPack, BatteryState),

    # Watersystems
    (WaterHeaterRvc, WaterHeaterRvcState),
    (WaterHeaterSimple, WaterHeaterSimpleState),
    (WaterPumpDefault, WaterPumpState),
    (WaterTankDefault, WaterTankState),
    (ToiletCircuitDefault, ToiletCircuitState),

    # Vehicle
    (VehicleSprinter, VehicleSprinterState),
    (HouseDoorLock, HouseDoorLockState),
    (VehicleId, VINState),

    # System
    (LockoutBasic, LockoutState),
    (LockoutStatic, LockoutStaticState),
    (LockoutDynamic, LockoutDynamicState),
]



if __name__ == '__main__':
    for comp, state in components:
        comp_instance = comp(state=state())
        print(comp, comp_instance.componentId)
else:
    component_catalog = {}
    component_schemas = {}
    for comp, state in components:
        comp_instance = comp(state=state())
        comp_instance.set_component_id()
        component_catalog[comp_instance.componentId] = CatalogItem(
            code=comp_instance.code,
            component=comp,
            state=state
        )
        component_schemas[comp_instance.componentId] = comp

    for key, value in component_catalog.items():
        print(key)
